# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-14 10:14
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('campusonline', '0002_building_floor_room_roomcategory'),
        ('base', '0002_icon'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beacon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField()),
                ('major', models.PositiveIntegerField()),
                ('minor', models.PositiveIntegerField()),
                ('position', django.contrib.gis.db.models.fields.PointField(srid=3857)),
                ('deployed', models.DateTimeField(auto_now_add=True)),
                ('seen', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('outline', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3857)),
                ('campusonline', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='campusonline.Building')),
            ],
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('one_way', models.BooleanField(default=False)),
                ('accessible', models.BooleanField(default=False)),
                ('weight', models.IntegerField(default=1)),
                ('path', django.contrib.gis.db.models.fields.LineStringField(srid=3857)),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('name', models.TextField()),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.Building')),
                ('campusonline', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='campusonline.Floor')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center', django.contrib.gis.db.models.fields.PointField(srid=3857)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PointOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('color', models.CharField(default='007b3c', max_length=6)),
                ('selected', models.BooleanField(default=False)),
                ('icon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Icon')),
            ],
        ),
        migrations.CreateModel(
            name='RoomCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('searchable', models.BooleanField(default=True)),
                ('campusonline', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='campusonline.RoomCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Door',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='geo.Node')),
                ('layout', django.contrib.gis.db.models.fields.PolygonField(srid=3857)),
            ],
            options={
                'abstract': False,
            },
            bases=('geo.node',),
        ),
        migrations.CreateModel(
            name='PointOfInterestInstance',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='geo.Node')),
                ('description', models.TextField(null=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.PointOfInterest')),
            ],
            options={
                'abstract': False,
            },
            bases=('geo.node',),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('node_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='geo.Node')),
                ('layout', django.contrib.gis.db.models.fields.PolygonField(srid=3857)),
                ('marker', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=3857)),
                ('virtual', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('campusonline', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='campusonline.Room')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.RoomCategory')),
            ],
            options={
                'abstract': False,
            },
            bases=('geo.node',),
        ),
        migrations.AddField(
            model_name='node',
            name='floor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.Floor'),
        ),
        migrations.AddField(
            model_name='node',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_geo.node_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='edge',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges_destination', to='geo.Node'),
        ),
        migrations.AddField(
            model_name='edge',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges_source', to='geo.Node'),
        ),
        migrations.AddField(
            model_name='beacon',
            name='floor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.Floor'),
        ),
        migrations.AddField(
            model_name='edge',
            name='door',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.Door'),
        ),
        migrations.AddField(
            model_name='door',
            name='rooms',
            field=models.ManyToManyField(to='geo.Room'),
        ),
    ]
