# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-08-30 11:04
from __future__ import unicode_literals

from django.db import migrations
from django.conf import settings


class Migration(migrations.Migration):

    forward = [
        '''
        CREATE FOREIGN TABLE "typo3"."file" (
            uid integer,
            pid integer,
            tstamp integer,
            type varchar,
            storage integer,
            identifier text,
            extension varchar,
            mime_type varchar,
            name text,
            sha1 varchar,
            size integer,
            creation_date integer,
            modification_date integer,
            last_indexed integer,
            missing integer,
            metadata integer,
            identifier_hash varchar,
            folder_hash varchar
        )
        SERVER sqlalchemy OPTIONS (
            tablename 'sys_file',
            db_url '{typo3}'
        );
        '''.format(typo3=settings.MULTICORN.get('typo3')),
        '''
        CREATE FOREIGN TABLE "typo3"."file_reference" (
            uid integer,
            pid integer,
            tstamp integer,
            crdate integer,
            cruser_id integer,
            sorting integer,
            deleted integer,
            hidden integer,
            sys_language_uid integer,
            uid_local integer,
            uid_foreign integer,
            tablenames varchar,
            fieldname varchar,
            sorting_foreign integer,
            table_local varchar,
            title varchar,
            description text,
            alternative text,
            link varchar,
            downloadname text,
            showinpreview integer,
            crop text,
            autoplay integer
        )
        SERVER sqlalchemy OPTIONS (
            tablename 'sys_file_reference',
            db_url '{typo3}'
        );
        '''.format(typo3=settings.MULTICORN.get('typo3')),
        '''
        CREATE MATERIALIZED VIEW "public"."typo3_newsmedia" AS SELECT
            r.uid AS id,
            f.uid AS media_id,
            n.uid AS news_id,
            CASE trim(both ' ' from r.title) WHEN '' THEN NULL ELSE trim(both ' ' from r.title) END AS title,
            CASE trim(both ' ' from r.description) WHEN '' THEN NULL ELSE trim(both ' ' from r.description) END AS description,
            CASE trim(both ' ' from r.alternative) WHEN '' THEN NULL ELSE trim(both ' ' from r.alternative) END AS alternative,
            CASE WHEN r.sys_language_uid <= 0 THEN NULL ELSE r.sys_language_uid END AS language_id,
            format('{base}%s', f.identifier) AS url,
            f.mime_type AS mimetype,
            f.name AS filename,
            f.size AS size,
            r.sorting AS order
        FROM
            typo3.news n,
            typo3.file_reference r,
            typo3.file f
        WHERE
            r.tablenames = 'tx_news_domain_model_news' AND
            r.table_local = 'sys_file' AND
            r.fieldname = 'fal_media' AND
            r.uid_foreign = n.uid AND
            f.uid = r.uid_local AND
            n.deleted = 0 AND
            n.hidden = 0 AND
            r.deleted = 0 AND
            r.hidden = 0
        '''.format(base=settings.OUTPOST.get('typo3_fileadmin')),
    ]
    reverse = [
        '''
        DROP MATERIALIZED VIEW IF EXISTS "public"."typo3_newsmedia";
        ''',
        '''
        DROP FOREIGN TABLE IF EXISTS "typo3"."file_reference";
        ''',
        '''
        DROP FOREIGN TABLE IF EXISTS "typo3"."file";
        ''',
    ]

    dependencies = [
        ('typo3', '0007_indices'),
    ]

    operations = [
        migrations.RunSQL(
            forward,
            reverse
        )
    ]
